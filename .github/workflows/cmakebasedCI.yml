name: CMake build tests

on:
  push:
    branches: [ "main", "kzoli39-CI" ]
  pull_request:
    branches: [ "main" ]

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }} / ${{ matrix.build_type }} / ${{ matrix.cpp_compiler }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        build_type: [Release, Debug]
        cpp_compiler: [g++, clang++]
        include:
          - os: macos-latest
            cpp_compiler: clang++
          - os: ubuntu-latest
            cpp_compiler: g++
          - os: ubuntu-latest
            cpp_compiler: clang++
        exclude:
          - os: macos-latest
            cpp_compiler: g++

    container:
      image: docker.io/kzoli39/custom-ubuntu-firefly:latest
      options: --workdir /github/workspace

    steps:
    - uses: actions/checkout@v4

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    #- name: Install MPI (Ubuntu)
    #  if: runner.os == 'Linux'
    #  run: apt-get update && apt-get install -y mpich
  
    - name: Install MPI (macOS)
      if: runner.os == 'macOS'
      run: brew install mpich gcc

    - name: Set Fortran Compiler (macOS)
      if: runner.os == 'macOS'
      run: |
        echo "Setting Fortran Compiler..."
        if [[ -x "$(which gfortran)" ]]; then
          echo "FC=$(which gfortran)" >> $GITHUB_ENV
        elif [[ -f "/usr/local/bin/gfortran-13" ]]; then
          echo "FC=/usr/local/bin/gfortran-13" >> $GITHUB_ENV
        elif [[ -f "/opt/homebrew/bin/gfortran-13" ]]; then
          echo "FC=/opt/homebrew/bin/gfortran-13" >> $GITHUB_ENV
        else
          echo "No gfortran found!"
          exit 1
        fi

    - name: Configure CMake
      if: runner.os == 'Linux'
      run: >
        cmake -B /github/workspace/build
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_Fortran_COMPILER=$FC
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -S /github/workspace

    - name: Configure CMake
      if: runner.os == 'macOS'
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_Fortran_COMPILER=$FC
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -S ${{ github.workspace }}

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: |
        ctest --build-config ${{ matrix.build_type }}
        ctest -R test_example_pass_regexp -V